import { Provider } from "react-redux"
import type { AppProps } from "next/app"
import Head from "next/head"
import { appWithTranslation } from "next-i18next"
import { store } from "store/store"

import { Layout } from "Ð¡omponents"

import { CacheProvider, EmotionCache } from "@emotion/react"
import createEmotionCache from "utils/createEmotionCache"
import lightThemeOptions from "styles/theme/lightThemeOptions"

import {
  ThemeProvider,
  StyledEngineProvider,
  CssBaseline,
  createTheme,
} from "@mui/material"

import "styles/globals.scss"

interface MyAppProps extends AppProps {
  emotionCache?: EmotionCache
}

const clientSideEmotionCache = createEmotionCache()
const lightTheme = createTheme(lightThemeOptions)

const MyApp: React.FunctionComponent<MyAppProps> = (props) => {
  const { Component, emotionCache = clientSideEmotionCache, pageProps } = props

  return (
    <>
      <Head>
        <title>ILONSI SHOP</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Provider store={store}>
        <CacheProvider value={emotionCache}>
          <ThemeProvider theme={lightTheme}>
            <StyledEngineProvider injectFirst>
              <CssBaseline />
              <Layout>
                <Component {...pageProps} />
              </Layout>
            </StyledEngineProvider>
          </ThemeProvider>
        </CacheProvider>
      </Provider>
    </>
  )
}

export default appWithTranslation(MyApp)

// import React from 'react'
// import App from 'next/app'
// import SiteLayout from '../components/SiteLayout'
// import AccountSettingsLayout from '../components/AccountSettingsLayout'

// class MyApp extends App {
//   render() {
//     const { Component, pageProps, router } = this.props

//     if (router.pathname.startsWith('/account-settings/')) {
//       return (
//         <SiteLayout>
//           <AccountSettingsLayout>
//             <Component {...pageProps}></Component>
//           </AccountSettingsLayout>
//         </SiteLayout>
//       )
//     }

//     return (
//       <SiteLayout>
//         <Component {...pageProps}></Component>
//       </SiteLayout>
//     )
//   }
// }

// export default MyApp
